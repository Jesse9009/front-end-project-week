{"ast":null,"code":"import _classCallCheck from \"/Users/jesseanderson/LambdaSchool/CSPT2/front-end-project-week/lambda-notes/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jesseanderson/LambdaSchool/CSPT2/front-end-project-week/lambda-notes/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jesseanderson/LambdaSchool/CSPT2/front-end-project-week/lambda-notes/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jesseanderson/LambdaSchool/CSPT2/front-end-project-week/lambda-notes/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jesseanderson/LambdaSchool/CSPT2/front-end-project-week/lambda-notes/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jesseanderson/LambdaSchool/CSPT2/front-end-project-week/lambda-notes/src/components/NotesList.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getNotes } from '../actions/actions';\n\nvar NoteList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NoteList, _Component);\n\n  function NoteList(props) {\n    var _this;\n\n    _classCallCheck(this, NoteList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NoteList).call(this, props));\n\n    _this.truncateString = function (str, num) {\n      if (str.length > num && num > 3) {\n        return str.slice(0, num - 3) + '...';\n      } else if (str.length > num && num <= 3) {\n        return str.slice(0, num) + '...';\n      } else {\n        return str;\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(NoteList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getNotes();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // console.log('props ', this.props.notes);\n      // console.log('NoteList ', this.props.notes);\n      // if (this.props.fetching) {\n      //   return (\n      //     <div className=\"pageWrapper\">\n      //       <h1>Loading Notes...</h1>\n      //     </div>\n      //   );\n      // }\n      return React.createElement(\"div\", {\n        className: \"pageWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Your Notes:\"), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Search\"), React.createElement(\"input\", {\n        placeholder: \"Search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"noteList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, this.props.notes.map(function (note) {\n        // console.log(note);\n        var body = _this2.truncateString(note.textBody, 210); // console.log(body);\n\n\n        return React.createElement(Link, {\n          to: \"/view/\".concat(note._id),\n          key: note._id,\n          className: \"note\",\n          onClick: _this2.props.getNotes,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"noteTitle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, note.title), React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          className: \"noteBody\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, body));\n      })));\n    }\n  }]);\n\n  return NoteList;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    notes: state.notes,\n    fetching: state.fetching\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getNotes: getNotes\n})(NoteList);","map":{"version":3,"sources":["/Users/jesseanderson/LambdaSchool/CSPT2/front-end-project-week/lambda-notes/src/components/NotesList.js"],"names":["React","Component","Link","connect","getNotes","NoteList","props","truncateString","str","num","length","slice","notes","map","note","body","textBody","_id","title","mapStateToProps","state","fetching"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,oBAAzB;;IAEMC,Q;;;;;AACJ,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,kFAAMA,KAAN;;AADiB,UAQnBC,cARmB,GAQF,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC7B,UAAID,GAAG,CAACE,MAAJ,GAAaD,GAAb,IAAoBA,GAAG,GAAG,CAA9B,EAAiC;AAC/B,eAAOD,GAAG,CAACG,KAAJ,CAAU,CAAV,EAAaF,GAAG,GAAG,CAAnB,IAAwB,KAA/B;AACD,OAFD,MAEO,IAAID,GAAG,CAACE,MAAJ,GAAaD,GAAb,IAAoBA,GAAG,IAAI,CAA/B,EAAkC;AACvC,eAAOD,GAAG,CAACG,KAAJ,CAAU,CAAV,EAAaF,GAAb,IAAoB,KAA3B;AACD,OAFM,MAEA;AACL,eAAOD,GAAP;AACD;AACF,KAhBkB;;AAAA;AAElB;;;;wCAEmB;AAClB,WAAKF,KAAL,CAAWF,QAAX;AACD;;;6BAYQ;AAAA;;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,EAGE;AAAO,QAAA,WAAW,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAIE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKE,KAAL,CAAWM,KAAX,CAAiBC,GAAjB,CAAqB,UAAAC,IAAI,EAAI;AAC5B;AACA,YAAMC,IAAI,GAAG,MAAI,CAACR,cAAL,CAAoBO,IAAI,CAACE,QAAzB,EAAmC,GAAnC,CAAb,CAF4B,CAG5B;;;AACA,eACE,oBAAC,IAAD;AACE,UAAA,EAAE,kBAAWF,IAAI,CAACG,GAAhB,CADJ;AAEE,UAAA,GAAG,EAAEH,IAAI,CAACG,GAFZ;AAGE,UAAA,SAAS,EAAC,MAHZ;AAIE,UAAA,OAAO,EAAE,MAAI,CAACX,KAAL,CAAWF,QAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAME;AAAG,UAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA0BU,IAAI,CAACI,KAA/B,CANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAPF,EAQE;AAAG,UAAA,SAAS,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAyBH,IAAzB,CARF,CADF;AAYD,OAhBA,CADH,CAJF,CADF;AA0BD;;;;EAvDoBd,S;;AA0DvB,IAAMkB,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC/B,SAAO;AAAER,IAAAA,KAAK,EAAEQ,KAAK,CAACR,KAAf;AAAsBS,IAAAA,QAAQ,EAAED,KAAK,CAACC;AAAtC,GAAP;AACD,CAFD;;AAIA,eAAelB,OAAO,CACpBgB,eADoB,EAEpB;AAAEf,EAAAA,QAAQ,EAARA;AAAF,CAFoB,CAAP,CAGbC,QAHa,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { connect } from 'react-redux';\nimport { getNotes } from '../actions/actions';\n\nclass NoteList extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.props.getNotes();\n  }\n\n  truncateString = (str, num) => {\n    if (str.length > num && num > 3) {\n      return str.slice(0, num - 3) + '...';\n    } else if (str.length > num && num <= 3) {\n      return str.slice(0, num) + '...';\n    } else {\n      return str;\n    }\n  };\n\n  render() {\n    // console.log('props ', this.props.notes);\n    // console.log('NoteList ', this.props.notes);\n    // if (this.props.fetching) {\n    //   return (\n    //     <div className=\"pageWrapper\">\n    //       <h1>Loading Notes...</h1>\n    //     </div>\n    //   );\n    // }\n    return (\n      <div className=\"pageWrapper\">\n        <h1>Your Notes:</h1>\n        <h2>Search</h2>\n        <input placeholder=\"Search\" />\n        <div className=\"noteList\">\n          {this.props.notes.map(note => {\n            // console.log(note);\n            const body = this.truncateString(note.textBody, 210);\n            // console.log(body);\n            return (\n              <Link\n                to={`/view/${note._id}`}\n                key={note._id}\n                className=\"note\"\n                onClick={this.props.getNotes}\n              >\n                <p className=\"noteTitle\">{note.title}</p>\n                <hr />\n                <p className=\"noteBody\">{body}</p>\n              </Link>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return { notes: state.notes, fetching: state.fetching };\n};\n\nexport default connect(\n  mapStateToProps,\n  { getNotes }\n)(NoteList);\n"]},"metadata":{},"sourceType":"module"}