{"ast":null,"code":"import _defineProperty from \"/Users/jesseanderson/LambdaSchool/CSPT2/front-end-project-week/lambda-notes/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/jesseanderson/LambdaSchool/CSPT2/front-end-project-week/lambda-notes/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jesseanderson/LambdaSchool/CSPT2/front-end-project-week/lambda-notes/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jesseanderson/LambdaSchool/CSPT2/front-end-project-week/lambda-notes/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jesseanderson/LambdaSchool/CSPT2/front-end-project-week/lambda-notes/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jesseanderson/LambdaSchool/CSPT2/front-end-project-week/lambda-notes/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jesseanderson/LambdaSchool/CSPT2/front-end-project-week/lambda-notes/src/components/EditNote.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getNotes, editNote } from '../actions/actions';\n\nvar EditNote =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EditNote, _Component);\n\n  function EditNote(props) {\n    var _this;\n\n    _classCallCheck(this, EditNote);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditNote).call(this, props));\n\n    _this.handleInput = function (e) {\n      e.preventDefault();\n\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      var id = _this.props.match.params.id;\n      var note = {\n        title: _this.state.title,\n        textBody: _this.state.body\n      };\n      console.log(note);\n\n      _this.props.editNote(id, note);\n\n      _this.setState({\n        noteEdited: true\n      }); // axios\n      //   .put(`https://fe-notes.herokuapp.com/note/edit/${id}`, note)\n      //   .then(res => {\n      //     console.log(res);\n      //     this.setState({ title: '', body: '', noteEdited: true });\n      //   })\n      //   .catch(() => alert('Error editing note'));\n\n    };\n\n    _this.state = {\n      tag: [],\n      title: '',\n      body: '',\n      noteEdited: false\n    };\n    return _this;\n  }\n\n  _createClass(EditNote, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      console.log(this.props.notes);\n      this.props.notes.map(function (note) {\n        if (_this2.props.match.params.id === note._id) {\n          console.log(note);\n\n          _this2.setState({\n            title: note.title,\n            body: note.textBody\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.noteEdited) {\n        this.props.getNotes();\n        return React.createElement(Redirect, {\n          to: \"/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"pageWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Edit Note:\"), React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        required: true,\n        className: \"inputTitle\",\n        placeholder: \"Note Title\",\n        name: \"title\",\n        value: this.state.title,\n        onChange: this.handleInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(\"textarea\", {\n        required: true,\n        className: \"inputContent\",\n        placeholder: \"Note Content\",\n        name: \"body\",\n        value: this.state.body,\n        onChange: this.handleInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Update\")));\n    }\n  }]);\n\n  return EditNote;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    notes: state.notes\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getNotes: getNotes,\n  editNote: editNote\n})(EditNote);","map":{"version":3,"sources":["/Users/jesseanderson/LambdaSchool/CSPT2/front-end-project-week/lambda-notes/src/components/EditNote.js"],"names":["React","Component","axios","Redirect","connect","getNotes","editNote","EditNote","props","handleInput","e","preventDefault","setState","target","name","value","handleSubmit","id","match","params","note","title","state","textBody","body","console","log","noteEdited","tag","notes","map","_id","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getNotes, editNote } from '../actions/actions';\n\nclass EditNote extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tag: [],\n      title: '',\n      body: '',\n      noteEdited: false\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props.notes);\n    this.props.notes.map(note => {\n      if (this.props.match.params.id === note._id) {\n        console.log(note);\n        this.setState({ title: note.title, body: note.textBody });\n      }\n    });\n  }\n\n  handleInput = e => {\n    e.preventDefault();\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const id = this.props.match.params.id;\n    const note = {\n      title: this.state.title,\n      textBody: this.state.body\n    };\n    console.log(note);\n    this.props.editNote(id, note);\n    this.setState({ noteEdited: true });\n    // axios\n    //   .put(`https://fe-notes.herokuapp.com/note/edit/${id}`, note)\n    //   .then(res => {\n    //     console.log(res);\n    //     this.setState({ title: '', body: '', noteEdited: true });\n    //   })\n    //   .catch(() => alert('Error editing note'));\n  };\n\n  render() {\n    if (this.state.noteEdited) {\n      this.props.getNotes();\n      return <Redirect to=\"/\" />;\n    }\n    return (\n      <div className=\"pageWrapper\">\n        <h1>Edit Note:</h1>\n        <form onSubmit={this.handleSubmit}>\n          <input\n            required\n            className=\"inputTitle\"\n            placeholder=\"Note Title\"\n            name=\"title\"\n            value={this.state.title}\n            onChange={this.handleInput}\n          />\n          <textarea\n            required\n            className=\"inputContent\"\n            placeholder=\"Note Content\"\n            name=\"body\"\n            value={this.state.body}\n            onChange={this.handleInput}\n          />\n          <button>Update</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return { notes: state.notes };\n};\n\nexport default connect(\n  mapStateToProps,\n  { getNotes, editNote }\n)(EditNote);\n"]},"metadata":{},"sourceType":"module"}