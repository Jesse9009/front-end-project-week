{"ast":null,"code":"import _classCallCheck from \"/Users/jesseanderson/LambdaSchool/CSPT2/front-end-project-week/lambda-notes/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jesseanderson/LambdaSchool/CSPT2/front-end-project-week/lambda-notes/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jesseanderson/LambdaSchool/CSPT2/front-end-project-week/lambda-notes/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jesseanderson/LambdaSchool/CSPT2/front-end-project-week/lambda-notes/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jesseanderson/LambdaSchool/CSPT2/front-end-project-week/lambda-notes/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jesseanderson/LambdaSchool/CSPT2/front-end-project-week/lambda-notes/src/components/NotesList.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getNotes } from '../actions/actions';\n\nvar NoteList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NoteList, _Component);\n\n  function NoteList(props) {\n    var _this;\n\n    _classCallCheck(this, NoteList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NoteList).call(this, props));\n\n    _this.truncateString = function (str, num) {\n      if (str.length > num && num > 3) {\n        return str.slice(0, num - 3) + '...';\n      } else if (str.length > num && num <= 3) {\n        return str.slice(0, num) + '...';\n      } else {\n        return str;\n      }\n    };\n\n    _this.compare = function (a, b) {\n      // console.log(a._id);\n      // console.log(b._id - a._id);\n      if (a._id > b._id) {\n        // console.log('a is after');\n        return -1;\n      } else {\n        // console.log('b is after');\n        return 1;\n      }\n    };\n\n    _this.sortNewToOld = function (notes) {\n      // console.log(notes);\n      // return notes.sort(this.compare);\n      _this.setState({\n        notes: notes.sort(_this.compare),\n        sorted: true\n      }); // console.log(notes);\n\n    };\n\n    _this.sortOldToNew = function (notes) {\n      // console.log(notes);\n      // return notes.sort(this.compare);\n      _this.setState({\n        notes: notes.sort(_this.compare).reverse(),\n        sorted: true\n      }); // console.log(notes);\n\n    };\n\n    _this.state = {\n      notes: [],\n      sorted: false\n    };\n    return _this;\n  }\n\n  _createClass(NoteList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getNotes();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // console.log('props ', this.props.notes);\n      // console.log('NoteList ', this.props.notes);\n      // if (this.props.fetching) {\n      //   return (\n      //     <div className=\"pageWrapper\">\n      //       <h1>Loading Notes...</h1>\n      //     </div>\n      //   );\n      // }\n      if (this.state.sorted) {\n        return React.createElement(\"div\", {\n          className: \"pageWrapper\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, \"Your Notes:\"), React.createElement(\"button\", {\n          onClick: function onClick() {\n            return _this2.sortNewToOld(_this2.props.notes);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, \"Sort new to old\"), React.createElement(\"button\", {\n          onClick: function onClick() {\n            return _this2.sortOldToNew(_this2.props.notes);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, \"Sort old to new\"), React.createElement(\"div\", {\n          className: \"noteList\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, this.state.notes.map(function (note) {\n          // console.log(note);\n          var body = _this2.truncateString(note.textBody, 210); // console.log(body);\n\n\n          return React.createElement(Link, {\n            to: \"/view/\".concat(note._id),\n            key: note._id,\n            className: \"note\",\n            onClick: _this2.props.getNotes,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            className: \"noteTitle\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85\n            },\n            __self: this\n          }, note.title), React.createElement(\"hr\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86\n            },\n            __self: this\n          }), React.createElement(\"p\", {\n            className: \"noteBody\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 87\n            },\n            __self: this\n          }, body));\n        })));\n      }\n\n      return React.createElement(\"div\", {\n        className: \"pageWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Your Notes:\"), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.sortNewToOld(_this2.props.notes);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Sort new to old\"), React.createElement(\"div\", {\n        className: \"noteList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, this.props.notes.map(function (note) {\n        // console.log(note);\n        var body = _this2.truncateString(note.textBody, 210); // console.log(body);\n\n\n        return React.createElement(Link, {\n          to: \"/view/\".concat(note._id),\n          key: note._id,\n          className: \"note\",\n          onClick: _this2.props.getNotes,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"noteTitle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, note.title), React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          className: \"noteBody\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, body));\n      })));\n    }\n  }]);\n\n  return NoteList;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    notes: state.notes,\n    fetching: state.fetching\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getNotes: getNotes\n})(NoteList);","map":{"version":3,"sources":["/Users/jesseanderson/LambdaSchool/CSPT2/front-end-project-week/lambda-notes/src/components/NotesList.js"],"names":["React","Component","Link","connect","getNotes","NoteList","props","truncateString","str","num","length","slice","compare","a","b","_id","sortNewToOld","notes","setState","sort","sorted","sortOldToNew","reverse","state","map","note","body","textBody","title","mapStateToProps","fetching"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { connect } from 'react-redux';\nimport { getNotes } from '../actions/actions';\n\nclass NoteList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { notes: [], sorted: false };\n  }\n\n  componentDidMount() {\n    this.props.getNotes();\n  }\n\n  truncateString = (str, num) => {\n    if (str.length > num && num > 3) {\n      return str.slice(0, num - 3) + '...';\n    } else if (str.length > num && num <= 3) {\n      return str.slice(0, num) + '...';\n    } else {\n      return str;\n    }\n  };\n\n  compare = (a, b) => {\n    // console.log(a._id);\n    // console.log(b._id - a._id);\n    if (a._id > b._id) {\n      // console.log('a is after');\n      return -1;\n    } else {\n      // console.log('b is after');\n      return 1;\n    }\n  };\n\n  sortNewToOld = notes => {\n    // console.log(notes);\n    // return notes.sort(this.compare);\n    this.setState({ notes: notes.sort(this.compare), sorted: true });\n    // console.log(notes);\n  };\n\n  sortOldToNew = notes => {\n    // console.log(notes);\n    // return notes.sort(this.compare);\n    this.setState({ notes: notes.sort(this.compare).reverse(), sorted: true });\n    // console.log(notes);\n  };\n\n  render() {\n    // console.log('props ', this.props.notes);\n    // console.log('NoteList ', this.props.notes);\n    // if (this.props.fetching) {\n    //   return (\n    //     <div className=\"pageWrapper\">\n    //       <h1>Loading Notes...</h1>\n    //     </div>\n    //   );\n    // }\n    if (this.state.sorted) {\n      return (\n        <div className=\"pageWrapper\">\n          <h1>Your Notes:</h1>\n          <button onClick={() => this.sortNewToOld(this.props.notes)}>\n            Sort new to old\n          </button>\n          <button onClick={() => this.sortOldToNew(this.props.notes)}>\n            Sort old to new\n          </button>\n          <div className=\"noteList\">\n            {this.state.notes.map(note => {\n              // console.log(note);\n              const body = this.truncateString(note.textBody, 210);\n              // console.log(body);\n              return (\n                <Link\n                  to={`/view/${note._id}`}\n                  key={note._id}\n                  className=\"note\"\n                  onClick={this.props.getNotes}\n                >\n                  <p className=\"noteTitle\">{note.title}</p>\n                  <hr />\n                  <p className=\"noteBody\">{body}</p>\n                </Link>\n              );\n            })}\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"pageWrapper\">\n        <h1>Your Notes:</h1>\n        <button onClick={() => this.sortNewToOld(this.props.notes)}>\n          Sort new to old\n        </button>\n        <div className=\"noteList\">\n          {this.props.notes.map(note => {\n            // console.log(note);\n            const body = this.truncateString(note.textBody, 210);\n            // console.log(body);\n            return (\n              <Link\n                to={`/view/${note._id}`}\n                key={note._id}\n                className=\"note\"\n                onClick={this.props.getNotes}\n              >\n                <p className=\"noteTitle\">{note.title}</p>\n                <hr />\n                <p className=\"noteBody\">{body}</p>\n              </Link>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return { notes: state.notes, fetching: state.fetching };\n};\n\nexport default connect(\n  mapStateToProps,\n  { getNotes }\n)(NoteList);\n"]},"metadata":{},"sourceType":"module"}