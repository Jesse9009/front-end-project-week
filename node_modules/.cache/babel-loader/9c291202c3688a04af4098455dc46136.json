{"ast":null,"code":"import _classCallCheck from \"/Users/jesseanderson/LambdaSchool/CSPT2/front-end-project-week/lambda-notes/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jesseanderson/LambdaSchool/CSPT2/front-end-project-week/lambda-notes/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jesseanderson/LambdaSchool/CSPT2/front-end-project-week/lambda-notes/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jesseanderson/LambdaSchool/CSPT2/front-end-project-week/lambda-notes/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jesseanderson/LambdaSchool/CSPT2/front-end-project-week/lambda-notes/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/jesseanderson/LambdaSchool/CSPT2/front-end-project-week/lambda-notes/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/jesseanderson/LambdaSchool/CSPT2/front-end-project-week/lambda-notes/src/components/ViewNote.js\";\nimport React, { Component } from 'react';\nimport { Button, Modal, ModalBody } from 'reactstrap';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getNotes, deleteNote } from '../actions/actions';\n\nvar ViewNote =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ViewNote, _Component);\n\n  function ViewNote(props) {\n    var _this;\n\n    _classCallCheck(this, ViewNote);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ViewNote).call(this, props));\n\n    _this.toggle = function () {\n      _this.setState({\n        modal: !_this.state.modal\n      });\n    };\n\n    _this.handleDelete = function (e) {\n      e.preventDefault();\n\n      _this.setState({\n        toList: true\n      });\n\n      _this.props.deleteNote(_this.props.match.params.id);\n    };\n\n    _this.state = {\n      modal: false,\n      backdrop: true,\n      toList: false\n    }; // this.toggle = this.toggle.bind(this);\n\n    _this.changeBackdrop = _this.changeBackdrop.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ViewNote, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getNotes();\n    }\n  }, {\n    key: \"changeBackdrop\",\n    value: function changeBackdrop(e) {\n      var value = e.target.value;\n\n      if (value !== 'static') {\n        value = JSON.parse(value);\n      }\n\n      this.setState({\n        backdrop: value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log('non view notes ', this.props.notes); // console.log(this.props.match.params.id);\n\n      if (this.state.toList) {\n        this.props.getNotes();\n        return React.createElement(Redirect, {\n          to: \"/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"pageWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"actionButtons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/edit/\".concat(this.props.match.params.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"edit\"), React.createElement(\"a\", {\n        onClick: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"delete\")), this.props.notes.map(function (note) {\n        if (_this2.props.match.params.id === note._id) {\n          // console.log(note.title);\n          return React.createElement(\"div\", {\n            key: note._id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            className: \"viewNoteTitle\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62\n            },\n            __self: this\n          }, note.title), React.createElement(\"p\", {\n            className: \"viewNoteBody\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63\n            },\n            __self: this\n          }, note.textBody));\n        }\n      }), React.createElement(Modal, {\n        isOpen: this.state.modal,\n        toggle: this.toggle,\n        className: this.props.className,\n        backdrop: this.state.backdrop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Are you sure you want to delete this?\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"danger\",\n        onClick: this.handleDelete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Delete\"), ' ', React.createElement(Button, {\n        color: \"primary\",\n        onClick: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"No\")))));\n    }\n  }]);\n\n  return ViewNote;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    notes: state.notes\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getNotes: getNotes,\n  deleteNote: deleteNote\n})(ViewNote);","map":{"version":3,"sources":["/Users/jesseanderson/LambdaSchool/CSPT2/front-end-project-week/lambda-notes/src/components/ViewNote.js"],"names":["React","Component","Button","Modal","ModalBody","Link","Redirect","connect","getNotes","deleteNote","ViewNote","props","toggle","setState","modal","state","handleDelete","e","preventDefault","toList","match","params","id","backdrop","changeBackdrop","bind","value","target","JSON","parse","console","log","notes","map","note","_id","title","textBody","className","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Button, Modal, ModalBody } from 'reactstrap';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getNotes, deleteNote } from '../actions/actions';\n\nclass ViewNote extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false,\n      backdrop: true,\n      toList: false\n    };\n\n    // this.toggle = this.toggle.bind(this);\n    this.changeBackdrop = this.changeBackdrop.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.getNotes();\n  }\n\n  toggle = () => {\n    this.setState({\n      modal: !this.state.modal\n    });\n  };\n\n  changeBackdrop(e) {\n    let value = e.target.value;\n    if (value !== 'static') {\n      value = JSON.parse(value);\n    }\n    this.setState({ backdrop: value });\n  }\n\n  handleDelete = e => {\n    e.preventDefault();\n    this.setState({ toList: true });\n    this.props.deleteNote(this.props.match.params.id);\n  };\n\n  render() {\n    console.log('non view notes ', this.props.notes);\n    // console.log(this.props.match.params.id);\n    if (this.state.toList) {\n      this.props.getNotes();\n      return <Redirect to=\"/\" />;\n    }\n    return (\n      <div className=\"pageWrapper\">\n        <div className=\"actionButtons\">\n          <Link to={`/edit/${this.props.match.params.id}`}>edit</Link>\n          <a onClick={this.toggle}>delete</a>\n        </div>\n        {this.props.notes.map(note => {\n          if (this.props.match.params.id === note._id) {\n            // console.log(note.title);\n            return (\n              <div key={note._id}>\n                <p className=\"viewNoteTitle\">{note.title}</p>\n                <p className=\"viewNoteBody\">{note.textBody}</p>\n              </div>\n            );\n          }\n        })}\n        <Modal\n          isOpen={this.state.modal}\n          toggle={this.toggle}\n          className={this.props.className}\n          backdrop={this.state.backdrop}\n        >\n          {/* <ModalHeader toggle={this.toggle}>Delete Note</ModalHeader> */}\n          <ModalBody>\n            <p>Are you sure you want to delete this?</p>\n            <div>\n              <Button color=\"danger\" onClick={this.handleDelete}>\n                Delete\n              </Button>{' '}\n              <Button color=\"primary\" onClick={this.toggle}>\n                No\n              </Button>\n            </div>\n          </ModalBody>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return { notes: state.notes };\n};\n\nexport default connect(\n  mapStateToProps,\n  { getNotes, deleteNote }\n)(ViewNote);\n"]},"metadata":{},"sourceType":"module"}