{"ast":null,"code":"import _classCallCheck from \"/Users/jesseanderson/LambdaSchool/CSPT2/front-end-project-week/lambda-notes/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jesseanderson/LambdaSchool/CSPT2/front-end-project-week/lambda-notes/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jesseanderson/LambdaSchool/CSPT2/front-end-project-week/lambda-notes/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jesseanderson/LambdaSchool/CSPT2/front-end-project-week/lambda-notes/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jesseanderson/LambdaSchool/CSPT2/front-end-project-week/lambda-notes/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jesseanderson/LambdaSchool/CSPT2/front-end-project-week/lambda-notes/src/components/NotesList.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getNotes } from '../actions/actions';\n\nvar NoteList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NoteList, _Component);\n\n  function NoteList(props) {\n    var _this;\n\n    _classCallCheck(this, NoteList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NoteList).call(this, props));\n\n    _this.truncateString = function (str, num) {\n      if (str.length > num && num > 3) {\n        return str.slice(0, num - 3) + '...';\n      } else if (str.length > num && num <= 3) {\n        return str.slice(0, num) + '...';\n      } else {\n        return str;\n      }\n    };\n\n    _this.handleInput = function (e) {\n      e.preventDefault();\n\n      _this.setState({\n        search: e.target.value\n      });\n    };\n\n    _this.searchNotes = function (e) {\n      e.preventDefault();\n\n      if (_this.state.search) {\n        _this.setState({\n          search: e.target.value,\n          notes: _this.state.notes.filter(function (note) {\n            if (note.title.included(_this.state.search)) {\n              return note;\n            }\n          })\n        });\n      }\n    };\n\n    _this.state = {\n      search: null,\n      notes: _this.props.notes\n    };\n    return _this;\n  }\n\n  _createClass(NoteList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getNotes();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // console.log('props ', this.props.notes);\n      // console.log('NoteList ', this.props.notes);\n      // if (this.props.fetching) {\n      //   return (\n      //     <div className=\"pageWrapper\">\n      //       <h1>Loading Notes...</h1>\n      //     </div>\n      //   );\n      // }\n      return React.createElement(\"div\", {\n        className: \"pageWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Your Notes:\"), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Search\"), React.createElement(\"input\", {\n        placeholder: \"Search\" // onChange={this.handleInput}\n        ,\n        onChange: this.searchNotes,\n        value: this.state.search,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"noteList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, this.props.notes.map(function (note) {\n        // console.log(note);\n        var body = _this2.truncateString(note.textBody, 210); // console.log(body);\n\n\n        return React.createElement(Link, {\n          to: \"/view/\".concat(note._id),\n          key: note._id,\n          className: \"note\",\n          onClick: _this2.props.getNotes,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"noteTitle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, note.title), React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          className: \"noteBody\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, body));\n      })));\n    }\n  }]);\n\n  return NoteList;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    notes: state.notes,\n    fetching: state.fetching\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getNotes: getNotes\n})(NoteList);","map":{"version":3,"sources":["/Users/jesseanderson/LambdaSchool/CSPT2/front-end-project-week/lambda-notes/src/components/NotesList.js"],"names":["React","Component","Link","connect","getNotes","NoteList","props","truncateString","str","num","length","slice","handleInput","e","preventDefault","setState","search","target","value","searchNotes","state","notes","filter","note","title","included","map","body","textBody","_id","mapStateToProps","fetching"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { connect } from 'react-redux';\nimport { getNotes } from '../actions/actions';\n\nclass NoteList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { search: null, notes: this.props.notes };\n  }\n\n  componentDidMount() {\n    this.props.getNotes();\n  }\n\n  truncateString = (str, num) => {\n    if (str.length > num && num > 3) {\n      return str.slice(0, num - 3) + '...';\n    } else if (str.length > num && num <= 3) {\n      return str.slice(0, num) + '...';\n    } else {\n      return str;\n    }\n  };\n\n  handleInput = e => {\n    e.preventDefault();\n    this.setState({ search: e.target.value });\n  };\n\n  searchNotes = e => {\n    e.preventDefault();\n    if (this.state.search) {\n      this.setState({\n        search: e.target.value,\n        notes: this.state.notes.filter(note => {\n          if (note.title.included(this.state.search)) {\n            return note;\n          }\n        })\n      });\n    }\n  };\n\n  render() {\n    // console.log('props ', this.props.notes);\n    // console.log('NoteList ', this.props.notes);\n    // if (this.props.fetching) {\n    //   return (\n    //     <div className=\"pageWrapper\">\n    //       <h1>Loading Notes...</h1>\n    //     </div>\n    //   );\n    // }\n\n    return (\n      <div className=\"pageWrapper\">\n        <h1>Your Notes:</h1>\n        <h2>Search</h2>\n        <input\n          placeholder=\"Search\"\n          // onChange={this.handleInput}\n          onChange={this.searchNotes}\n          value={this.state.search}\n        />\n        <div className=\"noteList\">\n          {this.props.notes.map(note => {\n            // console.log(note);\n            const body = this.truncateString(note.textBody, 210);\n            // console.log(body);\n            return (\n              <Link\n                to={`/view/${note._id}`}\n                key={note._id}\n                className=\"note\"\n                onClick={this.props.getNotes}\n              >\n                <p className=\"noteTitle\">{note.title}</p>\n                <hr />\n                <p className=\"noteBody\">{body}</p>\n              </Link>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return { notes: state.notes, fetching: state.fetching };\n};\n\nexport default connect(\n  mapStateToProps,\n  { getNotes }\n)(NoteList);\n"]},"metadata":{},"sourceType":"module"}