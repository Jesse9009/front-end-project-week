{"ast":null,"code":"import _objectSpread from \"/Users/jesseanderson/LambdaSchool/CSPT2/front-end-project-week/lambda-notes/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { FETCHING, GET_SUCCESS, SUCCESS, CREATED, DELETED, EDITED, FAIL } from '../actions/actions';\nvar initialState = {\n  notes: [],\n  fetching: false,\n  error: ''\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FETCHING:\n      return _objectSpread({}, state, {\n        fetching: true\n      });\n\n    case GET_SUCCESS:\n      return _objectSpread({}, state, {\n        fetching: false,\n        notes: action.payload\n      });\n\n    case CREATED:\n      return _objectSpread({}, state, {\n        fetching: false\n      });\n\n    case DELETED:\n      return _objectSpread({}, state, {\n        fetching: false\n      });\n\n    case EDITED:\n      return _objectSpread({}, state, {\n        fetching: false\n      });\n\n    case FAIL:\n      return _objectSpread({}, state, {\n        fetching: false,\n        error: action.payload\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/jesseanderson/LambdaSchool/CSPT2/front-end-project-week/lambda-notes/src/reducers/reducer.js"],"names":["FETCHING","GET_SUCCESS","SUCCESS","CREATED","DELETED","EDITED","FAIL","initialState","notes","fetching","error","state","action","type","payload"],"mappings":";AAAA,SACEA,QADF,EAEEC,WAFF,EAGEC,OAHF,EAIEC,OAJF,EAKEC,OALF,EAMEC,MANF,EAOEC,IAPF,QAQO,oBARP;AAUA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,QAAQ,EAAE,KAFS;AAGnBC,EAAAA,KAAK,EAAE;AAHY,CAArB;AAMA,gBAAe,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKb,QAAL;AACE,+BAAYW,KAAZ;AAAmBF,QAAAA,QAAQ,EAAE;AAA7B;;AACF,SAAKR,WAAL;AACE,+BAAYU,KAAZ;AAAmBF,QAAAA,QAAQ,EAAE,KAA7B;AAAoCD,QAAAA,KAAK,EAAEI,MAAM,CAACE;AAAlD;;AACF,SAAKX,OAAL;AACE,+BAAYQ,KAAZ;AAAmBF,QAAAA,QAAQ,EAAE;AAA7B;;AACF,SAAKL,OAAL;AACE,+BAAYO,KAAZ;AAAmBF,QAAAA,QAAQ,EAAE;AAA7B;;AACF,SAAKJ,MAAL;AACE,+BAAYM,KAAZ;AAAmBF,QAAAA,QAAQ,EAAE;AAA7B;;AACF,SAAKH,IAAL;AACE,+BAAYK,KAAZ;AAAmBF,QAAAA,QAAQ,EAAE,KAA7B;AAAoCC,QAAAA,KAAK,EAAEE,MAAM,CAACE;AAAlD;;AACF;AACE,aAAOH,KAAP;AAdJ;AAgBD,CAjBD","sourcesContent":["import {\n  FETCHING,\n  GET_SUCCESS,\n  SUCCESS,\n  CREATED,\n  DELETED,\n  EDITED,\n  FAIL\n} from '../actions/actions';\n\nconst initialState = {\n  notes: [],\n  fetching: false,\n  error: ''\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case FETCHING:\n      return { ...state, fetching: true };\n    case GET_SUCCESS:\n      return { ...state, fetching: false, notes: action.payload };\n    case CREATED:\n      return { ...state, fetching: false };\n    case DELETED:\n      return { ...state, fetching: false };\n    case EDITED:\n      return { ...state, fetching: false };\n    case FAIL:\n      return { ...state, fetching: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}